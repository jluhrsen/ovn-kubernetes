# utility file to collect common actions as composable actions to deduplicate the same work in different workflows

name: 'Setup, Push to Testspace, and Handle KIND Logs'
description: 'Setup Testspace, push results, export and upload KIND cluster logs'
inputs:
  domain:
    description: 'Testspace domain'
    required: true
  results_path:
    description: 'Path to test results'
    required: true
  kind_cluster_name:
    description: 'Name of the KIND cluster'
    required: true
  job_name:
    description: 'Name of the job, used for naming artifacts'
    required: true

runs:
  using: "composite"
  steps:
    - name: Export kind logs
      run: |
        mkdir -p /tmp/kind/logs
        kind export logs --name ${{ inputs.kind_cluster_name }} --loglevel=debug /tmp/kind/logs
      shell: bash
      if: always()

    - name: Upload kind logs
      uses: actions/upload-artifact@v4
      with:
        name: kind-logs-${{ inputs.job_name }}-${{ github.run_id }}
        path: /tmp/kind/logs
      if: always()

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ inputs.job_name }}-${{ github.run_id }}
        path: /home/runner/work/ovn-kubernetes/ovn-kubernetes/test/_artifacts

    - name: Install XMLStarlet
      shell: bash
      run: sudo apt-get update && sudo apt-get install -y xmlstarlet

    - name: Post Process JUnit Files
      shell: bash
      run: |
        ls -altr /home/runner/work/ovn-kubernetes/ovn-kubernetes/test/_artifacts/
        
        current_suite_name=$(xmlstarlet sel -t -m "//testsuite" -v "@name" -n "$file")
        conformance=""
        if [[ "$current_suite_name" == *"conformance"* ]]; then
            conformance="-conformance"
        fi
        descriptive_suitename="${MATRIX_TARGET}-${MATRIX_HA}-${MATRIX_GATEWAY_MODE}-${MATRIX_IPFAMILY}-${MATRIX_DISABLE_SNAT_MULTIPLE_GWS}-${MATRIX_SECOND_BRIDGE}-${MATRIX_IC}${conformance}"
        
        xmlstarlet ed --inplace -u "//testsuite/@name" -v "descriptive_suitename" "$file"
        xmlstarlet ed --inplace -d "//testcase[@status='skipped']" /home/runner/work/ovn-kubernetes/ovn-kubernetes/test/_artifacts/*.xml
        
        for file in /home/runner/work/ovn-kubernetes/ovn-kubernetes/test/_artifacts/*.xml; do
            if grep -q '<testsuite tests="1" failures="0"' "$file" && grep -q '<testcase classname="e2e" name="TestE2E"' "$file"; then
                echo "Detected summary report file. Renaming to prevent upload to Testspace."
                mv "$file" "${file%.xml}.summary"
                continue
            fi
        
            testcase_names=$(xmlstarlet sel -t -m "//testcase[not(@status='skipped')]" -v "@name" -n "$file")
    
            count_before_suite=0
            count_after_suite=0
            
            while IFS= read -r line; do
                if [[ "$line" == "[ReportBeforeSuite]"* ]]; then
                    count_before_suite=$((count_before_suite + 1))
                elif [[ "$line" == "[ReportAfterSuite]"* ]]; then
                    count_after_suite=$((count_after_suite + 1))
                fi
            done <<< "$testcase_names"
            
            if [[ $count_before_suite -eq 1 ]] && [[ $count_after_suite -eq 1 ]]; then
                echo "Only [ReportBeforeSuite] and [ReportAfterSuite] test cases are present. Removing .xml extension to prevent it being uploaded to Testspace."
                mv "$file" "${file%.xml}.all_skipped"
            fi
        done
        ls -altr /home/runner/work/ovn-kubernetes/ovn-kubernetes/test/_artifacts/

    - name: Setup Testspace
      uses: testspace-com/setup-testspace@v1
      with:
        domain: ${{ inputs.domain }}
      if: always()

    - name: Push result to Testspace server
      run: testspace "${{ inputs.results_path }}/"*.xml
      shell: bash
      if: always()
